
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  
  forms     Form[]
}

model Form {
  id          String   @id @default(uuid())
  userId      String
  title       String
  description String?
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  fields      FormField[]
  responses   FormResponse[]
}

model FormField {
  id         String   @id @default(uuid())
  formId     String
  label      String
  fieldType  FieldType
  options    Json? 
  isRequired Boolean @default(true)
  position   Int

  form       Form     @relation(fields: [formId], references: [id], onDelete: Cascade)

  ResponseValue ResponseValue[]
}

model FormResponse {
  id        String   @id @default(uuid())
  formId    String
  submittedAt DateTime @default(now())

  form      Form      @relation(fields: [formId], references: [id], onDelete: Cascade)
  values    ResponseValue[]
}

model ResponseValue {
  id         String   @id @default(uuid())
  responseId String
  fieldId    String
  value      String

  response   FormResponse @relation(fields: [responseId], references: [id], onDelete: Cascade)
  field      FormField    @relation(fields: [fieldId], references: [id], onDelete: Cascade)
}

enum FieldType {
  TEXT
  NUMBER
  EMAIL
  RADIO
  CHECKBOX
  DROPDOWN
  TEXTAREA
  DATE
  FILE
}
